
@{
    Layout = "~/Views/Shared/_LayoutConsumer.cshtml";
}

@section styles {
    <style type="text/css">
        .blog-image {
            height: 600px;
            width: 100%;
            object-fit: cover;
        }
    </style>
}

<!-- WRAPPER -->
<div class="wrapper" ng-controller="consumerPostsController as consumerPosts">

    <!-- PAGE TITLE -->
    <section class="module-sm bg-white-dark">
        <div class="container" id="page-top">

            <div class="row">
                <div class="col-sm-12 text-center">

                    <h3 class="montserrat text-uppercase m-b-10">Classic</h3>
                    <ol class="breadcrumb text-xs">
                        <li><a href="#">Home</a></li>
                        <li><a href="#">Blog</a></li>
                        <li class="active" ng-show="consumerPosts.tagName != null">{{consumerPosts.tagName}}</li>
                    </ol>

                </div>
            </div>

        </div>
    </section>
    <!-- END PAGE TITLE -->
    <!-- BLOGS -->
    <section class="module">
        <div class="container">

            <div class="row">

                <!-- BLOG SIDEBAR -->
                <div class="col-sm-3 sidebar">
                    <!-- TEXT WIDGET -->
                    <div class="widget">
                        <h6 class="montserrat text-uppercase bottom-line">Simple Text</h6>
                        <p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In dui magna posuere.</p>
                    </div>
                    <!-- END TEXT WIDGET -->
                    <!-- RECENT POSTS WIDGET -->
                    <div class="widget">
                        <h6 class="montserrat text-uppercase bottom-line">Recent Posts</h6>
                        <ul class="recent-posts">
                            <li ng-repeat="post in consumerPosts.recentPosts">
                                <!--NG-REPEAT 3 MOST RECENT BLOG POSTS HERE-->
                                <div class="widget-posts-image">
                                    <a href="#"><img ng-src={{post.imageUrl}} alt=""></a>
                                </div>
                                <div class="widget-posts-body">
                                    <h6 class="widget-posts-title"><a href="#">{{post.title}}</a></h6>
                                    <div class="widget-posts-meta">{{post.date | date : 'longDate'}}</div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <!-- END RECENT POSTS WIDGET -->
                    <!-- TAGS WIDGET -->
                    <div class="widget">
                        <h6 class="montserrat text-uppercase bottom-line">Tags</h6>
                        <div class="tags">
                            <span class="all-blogs"><a href="#" ng-click="consumerPosts.getPage(consumerPosts.pageIndex, consumerPosts.itemsPerPage)">All Blogs</a></span>
                            <span ng-repeat-start="tag in consumerPosts.tags"><a href="#" ng-click="consumerPosts.getByTag(tag.name, consumerPosts.pageIndex, consumerPosts.itemsPerPage)">{{tag.name}}</a></span> <span ng-repeat-end></span>
                        </div>
                    </div>
                    <!-- END TAGS WIDGET -->
                </div>
                <!-- END BLOG SIDEBAR -->
                <!--NO BLOGS-->
                <div class="col-sm-9 tags text-center" ng-show="consumerPosts.noBlogs">
                    <h2>We're sorry, there are no blogs associated with this post.</h2>
                    <h1>¯\_(ツ)_/¯</h1>
                    <a href="#" btn btn-default ng-click="consumerPosts.getPage(consumerPosts.pageIndex, consumerPosts.itemsPerPage)">VIEW ALL BLOGS</a>
                </div>
                <!--NO BLOGS-->
                <!-- BLOG CONTENT -->
                <div class="col-sm-9 blog-content" ng-hide="consumerPosts.noBlogs">
                    <article class="post format-image" ng-repeat="blog in consumerPosts.blogs">                        
                        <div class="post-preview">                            
                            <a href="#"><img class="blog-image" ng-src={{blog.imageUrl}} alt="Image Unavailable"></a>
                        </div>
                        <div class="post-content">
                            <h2 class="post-title"><a href="#">{{blog.title}}</a></h2>
                            <ul class="post-meta">
                                <li>{{blog.date | date : 'longDate'}}</li>
                                <li>By <a href="#">{{blog.name}}</a></li>
                            </ul>
                            <p ng-bind-html="blog.blogContent"></p>
                            <a href="#" class="btn btn-lg btn-link btn-base">Read more ›</a>
                        </div>
                    </article>
                </div>
                <!-- END BLOG CONTENT -->
                <!--PAGER-->
                <div class="col-sm-9 col-sm-offset-3 text-center" ng-hide="consumerPosts.noBlogs">
                    <ul uib-pagination
                        @*boundary-link-numbers="true"*@
                        boundary-links="true"
                        max-size="10"
                        total-items="consumerPosts.totalCount"
                        items-per-page="consumerPosts.pageSize"
                        ng-model="consumerPosts.currentPage"
                        ng-change="consumerPosts.onPageChange(consumerPosts.currentPage - 1, consumerPosts.pageSize)"></ul>
                </div>
                <!--PAGER-->

            </div><!-- .row -->

        </div>
    </section>
    <!-- END BLOGS -->

</div>
@section pageInitScripts {
    <!--Angular Smooth Scroll-->
    <script type="text/javascript" src="~/Scripts/bower_components/angular/angular-smooth-scroll.min.js"></script>
    <script>sabio.moduleOptions.extraModuleDependencies.push("smoothScroll");</script>
    <!--Angular Sanitize-->
    <script type="text/javascript" src="~/Scripts/ng/angular-sanitize.min.js"></script>
    <script>sabio.moduleOptions.extraModuleDependencies.push("ngSanitize");</script>
}

<!-- /WRAPPER -->
@section scripts {
    <script src="~/Scripts/sabio/services/sabio.services.blogPosts.js"></script>
    <script src="~/Scripts/sabio/services/sabio.services.blogTags.js"></script>
    <script type="text/javascript">

        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('consumerPostsController', ConsumerPostsController);

            ConsumerPostsController.$inject = ['$scope', '$baseController', 'blogTags', 'blogPostsService', 'consumerNotifications', 'smoothScroll', '$anchorScroll', '$sanitize'];

            function ConsumerPostsController(
                $scope
                , $baseController
                , blogTags
                , blogPostService
                , consumerNotifications
                , smoothScroll
                , $anchorScroll
                , $sanitize) {

                var vm = this;

                vm.$scope = $scope;

                $baseController.merge(vm, $baseController);
                vm.blogTags = blogTags;
                vm.blogPostService = blogPostService;
                vm.consumerNotifications = consumerNotifications;
                vm.notify = vm.blogPostService.getNotifier($scope);
                vm.smoothScroll = smoothScroll;

                vm.pageIndex = 0;
                vm.recentPosts = 3;
                vm.itemsPerPage = 6;
                vm.tagName = null;
                vm.noBlogs = false;

                vm.getRecentPosts = _getRecentPosts;
                vm.getPage = _getPage;
                vm.onPageChange = _onPageChange;
                vm.getByTag = _getByTag;

                render();
                function render() {
                    vm.blogTags.getAll(_onGetBlogTagsSuccess, _onGetBlogTagsError);
                    vm.getRecentPosts(vm.pageIndex, vm.recentPosts);
                    vm.getPage(vm.pageIndex, vm.itemsPerPage);

                };

                function _onGetBlogTagsSuccess(data) {
                    vm.notify(function () {
                        vm.tags = data.items;
                    })
                };

                function _onGetBlogTagsError() {
                    vm.consumerNotifications.error("Failed to get Blog Tags", "Error");
                };

                //--------------------GetForConsumer--------------------
                function _getPage(pageIndex, itemsPerPage) {
                    vm.tagName = null;
                    vm.blogPostService.getForConsumer(pageIndex, itemsPerPage, _onGetForConsumerSuccess, _onGetForConsumerError);
                }

                function _onGetForConsumerSuccess(data) {
                    vm.noBlogs = false;
                    vm.notify(function () {
                        $sanitize(data.item.pagedItems.blogContent);
                        vm.blogs = data.item.pagedItems;
                        vm.totalCount = data.item.totalCount;
                        vm.pageSize = data.item.pageSize;
                        vm.currentPage = data.item.pageIndex + 1;
                    });
                    $anchorScroll();
                }

                function _onGetForConsumerError() {
                    vm.consumerNotifications.error("Failed to retrieve Blog Posts", "Error");
                }

                function _onPageChange(pageIndex, itemsPerPage) {
                    if (vm.tagName == null) {
                        vm.getPage(pageIndex, itemsPerPage);
                    } else {
                        vm.getByTag(vm.tagName, pageIndex, itemsPerPage)
                    }
                }
                //--------------------GetForConsumer--------------------

                //--------------------GetForRecentPosts--------------------
                function _getRecentPosts(pageIndex, itemsPerPage) {
                    vm.blogPostService.getForConsumer(pageIndex, itemsPerPage, _onGetRecentPostsSuccess, _onGetRecentPostsError);
                }

                function _onGetRecentPostsSuccess(data) {
                    vm.notify(function () {
                        vm.recentPosts = data.item.pagedItems;
                    });
                }

                function _onGetRecentPostsError() {
                    vm.consumerNotifications.error("Failed to retrieve Recent Posts", "Error");
                }
                //--------------------GetForRecentPosts--------------------

                //--------------------GetByBlogTag--------------------
                function _getByTag(blogTag, pageIndex, itemsPerPage) {
                    vm.tagName = blogTag;
                    vm.blogPostService.getByTag(blogTag, pageIndex, itemsPerPage, _onGetByTagSuccess, _onGetByTagError);
                }

                function _onGetByTagSuccess(data) {
                    vm.noBlogs = false;
                    vm.notify(function () {
                        if (data.item == null) {
                            vm.noBlogs = true;
                        } else {
                            $sanitize(data.item.pagedItems.blogContent);
                            vm.blogs = data.item.pagedItems;
                            vm.totalCount = data.item.totalCount;
                            vm.pageSize = data.item.pageSize;
                            vm.currentPage = data.item.pageIndex + 1;
                        }
                    });
                    $anchorScroll();
                }

                function _onGetByTagError() {
                    vm.consumerNotifications.error("Failed to retrieve Blog Posts", "Error");
                }
                //--------------------GetByBlogTag--------------------
            }
        })();
    </script>
}