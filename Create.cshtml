
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutConsumer.cshtml";
}

@section styles {
    <style type="text/css">
        /* page styles */
        .center-div {
            margin: 0 auto;
            width: 50%;
        }

        /*.btn {
            color: green;
        }*/
    </style>
}

<div class="row wrapper border-bottom white-bg page-heading text-center">
    <div class="col-sm-4">
        <h3>Product Categoty Search</h3>
        <ol class="breadcrumb">
            <li>
                <a href="index.html">Home</a>
            </li>
            <li>
                <a href="index.html">Admin</a>
            </li>
            <li class="active">
                <strong>Breadcrumb</strong>
            </li>
        </ol> <br />
    </div>
    @*<div class="col-sm-8">  FIGURE OUT WHAT TO DO WITH THIS.
            <div class="title-action">
                <a href="" class="btn btn-primary">Do Something</a>
            </div>
        </div>*@
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6 col-md-offset-3">
                <div class="col-md-12">
                    <h5 class="montserrat text-uppercase bottom-line">Category Keyword Search</h5>
                    <div ng-controller="MainController as main">
                        <!--NG_REPEAT-->
                        <div class="container" ng-repeat="categoryId in main.items">
                                <div classs="col-sx-2">
                                    <div class="ibox-content center-block bigger-font">
                                        <div>Category Id: <span class="CategoryId">{{categoryId.categoryId}}</span></div>
                                        <div>Date Created: <span class="dateCreated">{{categoryId.dateCreated}}</span></div>
                                        <div>Date Modified: <span class="dateModified">{{categoryId.dateModified}}</span></div>
                                        <div>Id: <span class="id">{{categoryId.id}}</span></div>
                                        <div>Keyword: <span class="Keyword">{{categoryId.keyword}}</span></div><br />

                                    </div>
                                </div>
                            </div>

                        <div class="col-md-6">
                            <form id="getByCategoryIdForm" name="main.getByCategoryIdForm" ng-submit="main.getByCategoryId(categoryId)" novalidate>
                                <div class="form-group">
                                    <label>Enter a Category Id to search</label>
                                    <input type="text" class="form-control" ng-class="{'error' : main.showGetCategoryErrors && !main.getByCategoryIdForm.newCategoryId.$valid}"
                                           name="newCategoryId"
                                           ng-model="main.newIdSearch.newCategoryId" required>
                                    <div role="alert" classs="help-inline-error">
                                        <span class="error" ng-show="main.showGetCategoryErrors && main.getByCategoryIdForm.newCategoryId.$error.required">Enter a Category Id</span>
                                    </div>
                                </div>
                                <button type="submit" id="addIdSearch" class="btn btn-success">Search</button>
                            </form>
                        </div>

                        <div class="col-md-6 pull-right">
                            <form id="categoryForm" name="main.categoryForm" ng-submit="main.addRequest()" novalidate>
                                <div class="form-group">
                                    <label>Enter a key Word</label>
                                    <input type="text" class="form-control" ng-class="{'error': main.showCategoryErrorss && !main.categoryForm.keyword.$valid}"
                                           name="keyword"
                                           ng-model="main.newSearch.Keyword" required>
                                    <div role="alert" class="help-inline-error">
                                        <span class="error" ng-show="main.showCategoryErrors && main.categoryForm.keyword.$error.required">Please enter a Key Word</span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Enter a Category Id</label>
                                    <input type="text" class="form-control" ng-class="{'error': main.showCategoryErrors && !main.categoryForm.categoryId.$valid}"
                                           name="categoryId"
                                           ng-model="main.newSearch.CategoryId" required>
                                    <div role="alert" class="help-inline-error">
                                        <span class="error" ng-show="main.showCategoryErrors && main.categoryForm.categoryId.$error.required">Please enter a category Id</span>
                                    </div>
                                </div>
                                <button type="submit" id="addSearch" class="btn btn-success">Submit</button>
                                <button type="button" id="cmdResetSearch" class="btn btn-success" data-ng-click="main.resetForm()">Reset</button>
                            </form>
                        </div>
                    </div><!-- .row -->
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {





    <script src="~/Scripts/sabio/services/Sabio.Services.ProductCategoryKeywords.js"></script>

    <script type="text/javascript">

        sabio.services.dataToChangeService = sabio.services.editById || {};
        (function () {
            if (angular) {
                angular.module(APPNAME).factory("dataToChangeService", dataToChangeService); //should have service at end of name
                dataToChangeService.$inject = ["$baseService", "$sabio"];

                function dataToChangeService($baseService, $sabio) {
                    var serviceObject = sabio.services.dataToChangeService;
                    var service = $baseService.merge(true, {}, serviceObject, $baseService);
                    @if (Model != null)
                    {
                        <text>
                    service.currentId = @Model.Item;
                    </text>
                    } else
                    {
                        <text>
                    service.currentId = null;
                    </text>
                    }

                    return service;
                }
            }
        })();
    </script>

    <script type="text/javascript">

        (function () {
            "use strict";

            angular
                .module(APPNAME)
                .controller('MainController', MainController);

            MainController.$inject = ['$scope', '$baseController', 'productCategoryKeywordsServices', 'dataToChangeService'];

            function MainController(
                $scope
                , $baseController
                , productCategoryKeywordsServices
                , dataToChangeService) {

                var vm = this;

                vm.items = null;
                vm.categoryForm = null;
                vm.getByCategoryIdForm = null;
                vm.newSearch = null;
                vm.newIdSearch = null;
                vm.showCategoryErrors = false;
                vm.showGetCategoryErrors = false;
                vm.currentId = null;
                vm.updatedForm = null;
                vm.newPost = null;
                vm.newForm = [];
                vm.addToForm = [];

                vm.productCategoryKeywordsServices = productCategoryKeywordsServices;
                vm.$scope = $scope;
                vm.receiveItems = _receiveItems;
                vm.receiveEditById = _receiveEditById;
                vm.onFormError = _onFormError;
                vm.addRequest = _addRequest;
                vm.editForm = _editForm;
                vm.resetForm = _resetForm;
                vm.addId = _addId;
                vm.getByCategoryId = _getByCategoryId


                $baseController.merge(vm, $baseController);

                vm.notify = vm.productCategoryKeywordsServices.getNotifier($scope);

                //render();

                function _getByCategoryId() {
                    vm.showGetCategoryErrors = true;
                    vm.currentId = vm.newIdSearch.newCategoryId;
                    vm.productCategoryKeywordsServices.getKeywordsByCategoryId(vm.currentId, vm.receiveEditById, vm.onFormError);
                }

                //process the getById\\
                function _receiveEditById(data) {
                    vm.notify(function () {
                        vm.items = data.items;
                        console.log(vm.items)
                    });
                }

                function _receiveItems(data) {
                    vm.currentId = data.item;
                }

                //post function\\
                function _addRequest() {
                    vm.showCategoryErrors = true;

                    if (vm.categoryForm.$valid) {
                        if (vm.currentId != null) {
                            vm.editForm();
                        } else {
                            vm.productCategoryKeywordsServices.insert(vm.newSearch, vm.receiveItems, vm.onFormError);
                            console.log("data good =>", vm.newSearch);
                        }
                    }
                }

                //update page work\\
                //add the Id to the newSearch object\\
                function _addId() {

                    vm.newSearch.Id = vm.currentId;
                    vm.newPost = vm.newSearch;
                    console.log(vm.newPost);

                }

                function _editForm() {

                    vm.addId();

                    if (vm.categoryForm.$valid) {

                        vm.productCategoryKeywordsServices.update(vm.currentId, vm.newPost, vm.receiveItems, vm.onFormError);
                    }
                    else {
                        console.log("Data did not update");
                    }
                }

                //Reset form\\
                function _resetForm() {
                    vm.newSearch = null;
                    vm.showCategoryErrors = false;
                    vm.showGetCategoryErrors = false;
                    vm.currentId = null;
                    vm.updatedForm = null;
                    vm.newPost = null;
                    vm.categoryForm.$setPristine();
                    vm.categoryForm.$setUntouched();
                }

                function _onFormError(jqXhr, error) {
                    console.log(error);
                }

            }
        })();
    </script>
}

